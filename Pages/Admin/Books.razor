@page "/admin/books"
@page "/admin"
@inherits OwningComponentBase<IBooksLibRepository>
@{var format = System.Globalization.CultureInfo.GetCultureInfo("vi-VN");}

<table class="table table-sm table-striped table-bordered">
    <thead>
        <tr>
            <th>ID</th>
            <th>Tên sách</th>
            <th>Thể loại</th>
            <th>Giá</th>
            <th>Hình ảnh</th>
            <td />
        </tr>
    </thead>
    <tbody>
        @if (BookData?.Count() > 0)
        {
            @foreach (Book b in BookData)
            {
                <tr>
                    <td>@b.BookID</td>
                    <td>@b.Title</td>
                    <td>@b.Genre</td>
                    <td>@String.Format(format, "{0:c0}", b.Price * 1000)</td>
                    <td><img src="@b.ImgPath" alt="Img" height="50" /></td>
                    <td>
                        <NavLink class="btn btn-info btn-sm"
                                 href="@GetDetailsUrl(b.BookID)">
                            Chi tiết
                        </NavLink>
                        <NavLink class="btn btn-warning btn-sm"
                                 href="@GetEditUrl(b.BookID)">
                            Chỉnh sửa
                        </NavLink>
                        <button class="btn btn-danger btn-sm"
                                @onclick="@(e => DeleteBook(b))">
                            Xóa
                        </button>

                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="5" class="text-center">Hiện tại chưa có cuốn sách nào</td>
            </tr>
        }
    </tbody>
</table>
<NavLink class="btn btn-primary" href="/admin/books/create">Thêm mới</NavLink>
@code {
    public IBooksLibRepository Repository => Service;
    public IEnumerable<Book> BookData { get; set; }
    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }
    public async Task UpdateData()
    {
        BookData = await Repository.Books.ToListAsync();
    }
    public async Task DeleteBook(Book b)
    {
        Repository.DeleteBook(b);
        await UpdateData();
    }
    public string GetDetailsUrl(long id) => $"/admin/books/details/{id}";
    public string GetEditUrl(long id) => $"/admin/books/edit/{id}";
}
